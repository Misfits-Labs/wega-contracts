/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FeeManager,
  FeeManagerInterface,
} from "../../contracts/FeeManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "feeApplier",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "feeTaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeShare",
        type: "uint256",
      },
    ],
    name: "SetFeeRule",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WEGA_PROTOCOL_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_feeRules",
    outputs: [
      {
        internalType: "address",
        name: "applier",
        type: "address",
      },
      {
        internalType: "address",
        name: "feeTaker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feeShare",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "shouldApply",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addWegaProtocolAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "addWegaProtocolAdmins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "applier",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "transferAmount",
        type: "uint256",
      },
    ],
    name: "calculateFeesForTransfer",
    outputs: [
      {
        internalType: "address",
        name: "feeTaker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sendAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
    ],
    name: "closeWegaProtocolAdmin",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "applier",
        type: "address",
      },
    ],
    name: "getFeeRule",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "applier",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeTaker",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feeShare",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldApply",
            type: "bool",
          },
        ],
        internalType: "struct IFeeManager.FeeConfig",
        name: "feeRule",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isWegaProtocolAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeWegaProtocolAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "removeWegaProtocolAdmins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceWegaProtocolAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
    ],
    name: "rotateWegaProtocolAdmin",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "applier",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeTaker",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feeShare",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldApply",
            type: "bool",
          },
        ],
        internalType: "struct IFeeManager.FeeConfig[]",
        name: "configs",
        type: "tuple[]",
      },
    ],
    name: "setFeeConfigs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "applier",
        type: "address",
      },
    ],
    name: "shouldApplyFees",
    outputs: [
      {
        internalType: "bool",
        name: "shouldApply",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161206c61004c600039600081816106d301528181610713015281816107b2015281816107f20152610881015261206c6000f3fe6080604052600436106101b75760003560e01c806391d14854116100ec578063d14566151161008a578063e2edc48611610064578063e2edc48614610565578063f2fde38b14610585578063fa3f0269146105a5578063fcc35a36146105c557600080fd5b8063d14566151461051f578063d547741f14610532578063da2eab541461055257600080fd5b8063aa62d1de116100c6578063aa62d1de14610478578063c12812e314610498578063c52d07a0146104ba578063cf20013f146104ff57600080fd5b806391d148541461042e578063a217fddf1461044e578063a297e7ad1461046357600080fd5b806362a562cf116101595780636979b915116101335780636979b9151461035c578063715018a6146103dc5780638129fc1c146103f15780638da5cb5b1461040657600080fd5b806362a562cf146102b957806367c4846f146102d9578063688a845b1461033c57600080fd5b806336568abe1161019557806336568abe146102515780633659cfe6146102715780634f1ef2861461029157806352d1902d146102a457600080fd5b806301ffc9a7146101bc578063248a9ca3146101f15780632f2ff15d1461022f575b600080fd5b3480156101c857600080fd5b506101dc6101d7366004611993565b6105e5565b60405190151581526020015b60405180910390f35b3480156101fd57600080fd5b5061022161020c3660046119bd565b60009081526097602052604090206001015490565b6040519081526020016101e8565b34801561023b57600080fd5b5061024f61024a3660046119eb565b61061c565b005b34801561025d57600080fd5b5061024f61026c3660046119eb565b610646565b34801561027d57600080fd5b5061024f61028c366004611a1b565b6106c9565b61024f61029f366004611aa8565b6107a8565b3480156102b057600080fd5b50610221610874565b3480156102c557600080fd5b5061024f6102d4366004611b74565b610927565b3480156102e557600080fd5b506102f96102f4366004611a1b565b61096f565b6040516101e8919081516001600160a01b039081168252602080840151909116908201526040808301519082015260609182015115159181019190915260800190565b34801561034857600080fd5b5061024f610357366004611a1b565b6109e5565b34801561036857600080fd5b506103af610377366004611a1b565b61012d6020526000908152604090208054600182015460028301546003909301546001600160a01b0392831693919092169160ff1684565b604080516001600160a01b03958616815294909316602085015291830152151560608201526080016101e8565b3480156103e857600080fd5b5061024f6109f6565b3480156103fd57600080fd5b5061024f610a0a565b34801561041257600080fd5b506033546040516001600160a01b0390911681526020016101e8565b34801561043a57600080fd5b506101dc6104493660046119eb565b610b1a565b34801561045a57600080fd5b50610221600081565b34801561046f57600080fd5b5061024f610b45565b34801561048457600080fd5b5061024f610493366004611c13565b610b5d565b3480156104a457600080fd5b5061022160008051602061204083398151915281565b3480156104c657600080fd5b506104da6104d5366004611cf4565b610bde565b604080516001600160a01b0390941684526020840192909252908201526060016101e8565b34801561050b57600080fd5b5061024f61051a366004611b74565b610c23565b61024f61052d366004611a1b565b610c6b565b34801561053e57600080fd5b5061024f61054d3660046119eb565b610d41565b61024f610560366004611a1b565b610d66565b34801561057157600080fd5b506101dc610580366004611a1b565b610dfe565b34801561059157600080fd5b5061024f6105a0366004611a1b565b610e18565b3480156105b157600080fd5b506101dc6105c0366004611a1b565b610e3f565b3480156105d157600080fd5b5061024f6105e0366004611a1b565b610e54565b60006001600160e01b03198216637965db0b60e01b148061061657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008281526097602052604090206001015461063781610e65565b6106418383610e6f565b505050565b6001600160a01b03811633146106bb5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106c58282610ef5565b5050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107115760405162461bcd60e51b81526004016106b290611d20565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661075a600080516020611fd7833981519152546001600160a01b031690565b6001600160a01b0316146107805760405162461bcd60e51b81526004016106b290611d6c565b61078981610f5c565b604080516000808252602082019092526107a591839190610f64565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107f05760405162461bcd60e51b81526004016106b290611d20565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610839600080516020611fd7833981519152546001600160a01b031690565b6001600160a01b03161461085f5760405162461bcd60e51b81526004016106b290611d6c565b61086882610f5c565b6106c582826001610f64565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109145760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016106b2565b50600080516020611fd783398151915290565b61092f6110cf565b60005b81518110156106c55761095d82828151811061095057610950611db8565b6020026020010151611129565b8061096781611de4565b915050610932565b60408051608080820183526000808352602080840182905283850182905260609384018290526001600160a01b03958616825261012d8152908490208451928301855280548616835260018101549095169082015260028401549281019290925260039092015460ff1615159181019190915290565b6109ed6110cf565b6107a581611141565b6109fe6110cf565b610a086000611159565b565b600054610100900460ff1615808015610a2a5750600054600160ff909116105b80610a445750303b158015610a44575060005460ff166001145b610aa75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106b2565b6000805460ff191660011790558015610aca576000805461ff0019166101001790555b610ad26111ab565b80156107a5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b60009182526097602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610a0860008051602061204083398151915233610646565b610b6633610dfe565b604051806060016040528060238152602001611fb46023913990610b9d5760405162461bcd60e51b81526004016106b29190611e21565b5060005b81518110156106c557610bcc828281518110610bbf57610bbf611db8565b60200260200101516111e2565b80610bd681611de4565b915050610ba1565b600080600080610bed8661096f565b9050610c0681604001518661128690919063ffffffff16565b602082015194509250610c198386611e54565b9150509250925092565b610c2b6110cf565b60005b81518110156106c557610c59828281518110610c4c57610c4c611db8565b6020026020010151611141565b80610c6381611de4565b915050610c2e565b610c7433610dfe565b604051806060016040528060238152602001611fb46023913990610cab5760405162461bcd60e51b81526004016106b29190611e21565b5060006001600160a01b0316816001600160a01b0316141560405180606001604052806022815260200161201e6022913990610cfa5760405162461bcd60e51b81526004016106b29190611e21565b50610d0481611129565b610d0c610b45565b6040516001600160a01b038216903480156108fc02916000818181858888f193505050501580156106c5573d6000803e3d6000fd5b600082815260976020526040902060010154610d5c81610e65565b6106418383610ef5565b610d6f33610dfe565b604051806060016040528060238152602001611fb46023913990610da65760405162461bcd60e51b81526004016106b29190611e21565b5060006001600160a01b0316816001600160a01b0316141560405180606001604052806022815260200161201e6022913990610df55760405162461bcd60e51b81526004016106b29190611e21565b50610d0c610b45565b600061061660008051602061204083398151915283610b1a565b610e206110cf565b610e29816112ab565b610e34600082610e6f565b6107a5600033610646565b6000610e4a8261096f565b6060015192915050565b610e5c6110cf565b6107a581611129565b6107a58133611321565b610e798282610b1a565b6106c55760008281526097602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610eb13390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610eff8282610b1a565b156106c55760008281526097602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6107a56110cf565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610f97576106418361137a565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ff1575060408051601f3d908101601f19168201909252610fee91810190611e67565b60015b6110545760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016106b2565b600080516020611fd783398151915281146110c35760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016106b2565b50610641838383611416565b6033546001600160a01b03163314610a085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106b2565b6107a560008051602061204083398151915282610e6f565b6107a560008051602061204083398151915282610d41565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166111d25760405162461bcd60e51b81526004016106b290611e80565b6111da611441565b610a08611468565b80516001600160a01b03908116600090815261012d6020908152604091829020845181546001600160a01b031990811691861691821783558387015160018401805490921696169586179055838601516002830181905560608701516003909301805460ff19169315159390931790925592519081527f8dc2595ce1810f7cf7c62393879c4631c6d06e9adabb09046ea44bde0cc0b22c910160405180910390a350565b600081156112a25761129b83836127106114c3565b9050610616565b50600092915050565b6112b36110cf565b6001600160a01b0381166113185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106b2565b6107a581611159565b61132b8282610b1a565b6106c557611338816115b3565b6113438360206115c5565b604051602001611354929190611ecb565b60408051601f198184030181529082905262461bcd60e51b82526106b291600401611e21565b6001600160a01b0381163b6113e75760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016106b2565b600080516020611fd783398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61141f83611761565b60008251118061142c5750805b156106415761143b83836117a1565b50505050565b600054610100900460ff16610a085760405162461bcd60e51b81526004016106b290611e80565b600054610100900460ff1661148f5760405162461bcd60e51b81526004016106b290611e80565b6114976117c6565b61149f611441565b6114aa600033610e6f565b610a0860008051602061204083398151915260006117f5565b60008080600019858709858702925082811083820303915050806000036114fd578382816114f3576114f3611f40565b04925050506115ac565b8084116115445760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b60448201526064016106b2565b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b60606106166001600160a01b03831660145b606060006115d4836002611f56565b6115df906002611f6d565b67ffffffffffffffff8111156115f7576115f7611a38565b6040519080825280601f01601f191660200182016040528015611621576020820181803683370190505b509050600360fc1b8160008151811061163c5761163c611db8565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061166b5761166b611db8565b60200101906001600160f81b031916908160001a905350600061168f846002611f56565b61169a906001611f6d565b90505b6001811115611712576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106116ce576116ce611db8565b1a60f81b8282815181106116e4576116e4611db8565b60200101906001600160f81b031916908160001a90535060049490941c9361170b81611f80565b905061169d565b5083156115ac5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106b2565b61176a8161137a565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606115ac8383604051806060016040528060278152602001611ff760279139611840565b600054610100900460ff166117ed5760405162461bcd60e51b81526004016106b290611e80565b610a086118b8565b600082815260976020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6060600080856001600160a01b03168560405161185d9190611f97565b600060405180830381855af49150503d8060008114611898576040519150601f19603f3d011682016040523d82523d6000602084013e61189d565b606091505b50915091506118ae868383876118e8565b9695505050505050565b600054610100900460ff166118df5760405162461bcd60e51b81526004016106b290611e80565b610a0833611159565b60608315611957578251600003611950576001600160a01b0385163b6119505760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106b2565b5081611961565b6119618383611969565b949350505050565b8151156119795781518083602001fd5b8060405162461bcd60e51b81526004016106b29190611e21565b6000602082840312156119a557600080fd5b81356001600160e01b0319811681146115ac57600080fd5b6000602082840312156119cf57600080fd5b5035919050565b6001600160a01b03811681146107a557600080fd5b600080604083850312156119fe57600080fd5b823591506020830135611a10816119d6565b809150509250929050565b600060208284031215611a2d57600080fd5b81356115ac816119d6565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715611a7157611a71611a38565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611aa057611aa0611a38565b604052919050565b60008060408385031215611abb57600080fd5b8235611ac6816119d6565b915060208381013567ffffffffffffffff80821115611ae457600080fd5b818601915086601f830112611af857600080fd5b813581811115611b0a57611b0a611a38565b611b1c601f8201601f19168501611a77565b91508082528784828501011115611b3257600080fd5b80848401858401376000848284010152508093505050509250929050565b600067ffffffffffffffff821115611b6a57611b6a611a38565b5060051b60200190565b60006020808385031215611b8757600080fd5b823567ffffffffffffffff811115611b9e57600080fd5b8301601f81018513611baf57600080fd5b8035611bc2611bbd82611b50565b611a77565b81815260059190911b82018301908381019087831115611be157600080fd5b928401925b82841015611c08578335611bf9816119d6565b82529284019290840190611be6565b979650505050505050565b60006020808385031215611c2657600080fd5b823567ffffffffffffffff811115611c3d57600080fd5b8301601f81018513611c4e57600080fd5b8035611c5c611bbd82611b50565b81815260079190911b82018301908381019087831115611c7b57600080fd5b928401925b82841015611c085760808489031215611c995760008081fd5b611ca1611a4e565b8435611cac816119d6565b815284860135611cbb816119d6565b81870152604085810135908201526060808601358015158114611cde5760008081fd5b9082015282526080939093019290840190611c80565b60008060408385031215611d0757600080fd5b8235611d12816119d6565b946020939093013593505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611df657611df6611dce565b5060010190565b60005b83811015611e18578181015183820152602001611e00565b50506000910152565b6020815260008251806020840152611e40816040850160208701611dfd565b601f01601f19169190910160400192915050565b8181038181111561061657610616611dce565b600060208284031215611e7957600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611f03816017850160208801611dfd565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611f34816028840160208801611dfd565b01602801949350505050565b634e487b7160e01b600052601260045260246000fd5b808202811582820484141761061657610616611dce565b8082018082111561061657610616611dce565b600081611f8f57611f8f611dce565b506000190190565b60008251611fa9818460208701611dfd565b919091019291505056fe57656761416363657373436f6e74726f6c3a2043616c6c65724e6f74416c6c6f776564360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c656457656761416363657373436f6e74726f6c3a2052656365697665724973456d707479efda5d9a1a0cecf3bb291502cc13ccbd4160d2b708e821b4eefa53251d1a0854a164736f6c6343000813000a";

type FeeManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeManager__factory extends ContractFactory {
  constructor(...args: FeeManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FeeManager> {
    return super.deploy(overrides || {}) as Promise<FeeManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FeeManager {
    return super.attach(address) as FeeManager;
  }
  override connect(signer: Signer): FeeManager__factory {
    return super.connect(signer) as FeeManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeManagerInterface {
    return new utils.Interface(_abi) as FeeManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeManager {
    return new Contract(address, _abi, signerOrProvider) as FeeManager;
  }
}
