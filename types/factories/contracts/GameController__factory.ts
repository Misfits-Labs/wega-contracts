/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  GameController,
  GameControllerInterface,
} from "../../contracts/GameController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20EscrowAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "game",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WegaEscrow_CallerNotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "WegaEscrow_InvalidState",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "DeclareWinner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "chanceContract",
    outputs: [
      {
        internalType: "contract ITwoWayChanceGame",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20Escrow",
    outputs: [
      {
        internalType: "contract IWegaERC20Escrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "escrowHash",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "players",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "rounds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "playTwoWayChanceGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b44380380610b4483398101604081905261002f916100e0565b61003833610074565b600180546001600160a01b038481166001600160a01b031992831617835560048054918516919092161790556003805490910190555050610113565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100db57600080fd5b919050565b600080604083850312156100f357600080fd5b6100fc836100c4565b915061010a602084016100c4565b90509250929050565b610a22806101226000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630148995314610067578063715018a6146100965780638da5cb5b146100a0578063a30993ed146100b1578063f2fde38b146100c4578063fe2810cf146100d7575b600080fd5b60045461007a906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009e6100ea565b005b6000546001600160a01b031661007a565b61009e6100bf3660046107f9565b6100fe565b61009e6100d23660046108c5565b6105e4565b60015461007a906001600160a01b031681565b6100f2610662565b6100fc60006106bc565b565b6001546001600160a01b031663bde0c98885336040516001600160e01b031960e085901b16815260048101929092526001600160a01b03166024820152604401602060405180830381865afa15801561015b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017f91906108e9565b61019c57604051631022a99960e31b815260040160405180910390fd5b600180546040516331627f4360e21b8152600481018790526001600160a01b039091169063c589fd0c9060240160c060405180830381865afa1580156101e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020a9190610931565b51600381111561021c5761021c61090b565b1461023a576040516368b1fd3f60e01b815260040160405180910390fd5b600080838160015b828111610535576004546000906001600160a01b031663e62bdf498861026760035490565b8c60008151811061027a5761027a6109bf565b60200260200101516040518463ffffffff1660e01b81526004016102ba9392919092835260208301919091526001600160a01b0316604082015260600190565b6020604051808303816000875af11580156102d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fd91906109d5565b90506103638282600260008e815260200190815260200160002060008d60008151811061032c5761032c6109bf565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002061070c9092919063ffffffff16565b50610372600380546001019055565b6004546000906001600160a01b031663e62bdf498961039060035490565b8d6001815181106103a3576103a36109bf565b60200260200101516040518463ffffffff1660e01b81526004016103e39392919092835260208301919091526001600160a01b0316604082015260600190565b6020604051808303816000875af1158015610402573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042691906109d5565b90506104558382600260008f815260200190815260200160002060008e60018151811061032c5761032c6109bf565b50610464600380546001019055565b8082111561047e5786610476816109ee565b9750506104b4565b808210156104985785610490816109ee565b9650506104b4565b866104a2816109ee565b97505085806104b0906109ee565b9650505b84831480156104c257508587145b156104db57846104d1816109ee565b9550505050610523565b85871161050257896001815181106104f5576104f56109bf565b602002602001015161051e565b89600081518110610515576105156109bf565b60200260200101515b935050505b8061052d816109ee565b915050610242565b506001546040516396560d2b60e01b8152600481018a90526001600160a01b038381166024830152909116906396560d2b90604401600060405180830381600087803b15801561058457600080fd5b505af1158015610598573d6000803e3d6000fd5b50506040516001600160a01b03841681528a92507f1bb0541679368426b4a98a31278d9e1257181c993231ec1f8897e4d7d1f63c19915060200160405180910390a25050505050505050565b6105ec610662565b6001600160a01b0381166106565760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61065f816106bc565b50565b6000546001600160a01b031633146100fc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161064d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610719848484610721565b949350505050565b6000828152600284016020526040812082905561071984846000610745838361074e565b90505b92915050565b600081815260018301602052604081205461079557508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610748565b506000610748565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156107dc576107dc61079d565b604052919050565b6001600160a01b038116811461065f57600080fd5b6000806000806080858703121561080f57600080fd5b8435935060208086013567ffffffffffffffff8082111561082f57600080fd5b818801915088601f83011261084357600080fd5b8135818111156108555761085561079d565b8060051b91506108668483016107b3565b818152918301840191848101908b84111561088057600080fd5b938501935b838510156108aa578435925061089a836107e4565b8282529385019390850190610885565b989b989a505050506040870135966060013595945050505050565b6000602082840312156108d757600080fd5b81356108e2816107e4565b9392505050565b6000602082840312156108fb57600080fd5b815180151581146108e257600080fd5b634e487b7160e01b600052602160045260246000fd5b805161092c816107e4565b919050565b600060c0828403121561094357600080fd5b60405160c0810181811067ffffffffffffffff821117156109665761096661079d565b60405282516004811061097857600080fd5b80825250602083015160208201526040830151604082015261099c60608401610921565b60608201526080830151608082015260a083015160a08201528091505092915050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156109e757600080fd5b5051919050565b600060018201610a0e57634e487b7160e01b600052601160045260246000fd5b506001019056fea164736f6c6343000813000a";

type GameControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameController__factory extends ContractFactory {
  constructor(...args: GameControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    erc20EscrowAddress: PromiseOrValue<string>,
    game: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GameController> {
    return super.deploy(
      erc20EscrowAddress,
      game,
      overrides || {}
    ) as Promise<GameController>;
  }
  override getDeployTransaction(
    erc20EscrowAddress: PromiseOrValue<string>,
    game: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      erc20EscrowAddress,
      game,
      overrides || {}
    );
  }
  override attach(address: string): GameController {
    return super.attach(address) as GameController;
  }
  override connect(signer: Signer): GameController__factory {
    return super.connect(signer) as GameController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameControllerInterface {
    return new utils.Interface(_abi) as GameControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameController {
    return new Contract(address, _abi, signerOrProvider) as GameController;
  }
}
