/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  WegaERC721Escrow,
  WegaERC721EscrowInterface,
} from "../../contracts/WegaERC721Escrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WegaEscrow_CallerNotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "WegaEscrow_DepositorNotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "WegaEscrow_InvalidRequestData",
    type: "error",
  },
  {
    inputs: [],
    name: "WegaEscrow_InvalidRequestState",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "WegaEscrow_NotNftOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "depositer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "canceler",
        type: "address",
      },
    ],
    name: "RequestCancelation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftAgainst",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "RequestCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "nftFor",
        type: "address",
      },
      {
        internalType: "address",
        name: "ownerFor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenIdFor",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    name: "cancelRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAgainst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenIdAgainst",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "createRequestAndDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    name: "depositNftForSide",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    name: "getEscrowRequest",
    outputs: [
      {
        components: [
          {
            internalType: "enum IWegaERC721Escrow.TransactionState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "nftAgainst",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenIdAgainst",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "ownerAgainst",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftFor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenIdFor",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "ownerFor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "transferId",
            type: "bytes32",
          },
        ],
        internalType: "struct IWegaERC721Escrow.EscrowRequest",
        name: "request_",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEscrowRequests",
    outputs: [
      {
        components: [
          {
            internalType: "enum IWegaERC721Escrow.TransactionState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "nftAgainst",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenIdAgainst",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "ownerAgainst",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftFor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenIdFor",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "ownerFor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "transferId",
            type: "bytes32",
          },
        ],
        internalType: "struct IWegaERC721Escrow.EscrowRequest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getEscrowRequestsOfUser",
    outputs: [
      {
        components: [
          {
            internalType: "enum IWegaERC721Escrow.TransactionState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "nftAgainst",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenIdAgainst",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "ownerAgainst",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftFor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenIdFor",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "ownerFor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "transferId",
            type: "bytes32",
          },
        ],
        internalType: "struct IWegaERC721Escrow.EscrowRequest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    name: "getRequest",
    outputs: [
      {
        components: [
          {
            internalType: "enum IWegaERC721Escrow.TransactionState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "nftAgainst",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenIdAgainst",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "ownerAgainst",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftFor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenIdFor",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "ownerFor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "transferId",
            type: "bytes32",
          },
        ],
        internalType: "struct IWegaERC721Escrow.EscrowRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getTransferId",
    outputs: [
      {
        internalType: "bytes32",
        name: "transferId_",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAgainst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenIdAgainst",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "ownerAgainst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "hash",
    outputs: [
      {
        internalType: "bytes32",
        name: "transferId_",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620019b6380380620019b68339810160408190526200003491620001e0565b600060805281516200004e9060049060208501906200006d565b508051620000649060059060208401906200006d565b50505062000287565b8280546200007b906200024a565b90600052602060002090601f0160209004810192826200009f5760008555620000ea565b82601f10620000ba57805160ff1916838001178555620000ea565b82800160010185558215620000ea579182015b82811115620000ea578251825591602001919060010190620000cd565b50620000f8929150620000fc565b5090565b5b80821115620000f85760008155600101620000fd565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013b57600080fd5b81516001600160401b038082111562000158576200015862000113565b604051601f8301601f19908116603f0116810190828211818310171562000183576200018362000113565b81604052838152602092508683858801011115620001a057600080fd5b600091505b83821015620001c45785820183015181830184015290820190620001a5565b83821115620001d65760008385830101525b9695505050505050565b60008060408385031215620001f457600080fd5b82516001600160401b03808211156200020c57600080fd5b6200021a8683870162000129565b935060208501519150808211156200023157600080fd5b50620002408582860162000129565b9150509250929050565b600181811c908216806200025f57607f821691505b602082108114156200028157634e487b7160e01b600052602260045260246000fd5b50919050565b60805161170c620002aa60003960008181610188015261118f015261170c6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063a3f4df7e11610097578063f11689af11610066578063f11689af14610266578063fb1e61ca1461020e578063fcac86f714610279578063ffa1ad741461028c57600080fd5b8063a3f4df7e1461022e578063adb610a314610243578063bc0b87071461024b578063e196f0571461025357600080fd5b80638147a508116100d35780638147a508146101c85780638de416c1146101e85780638e19899e146101fb5780639ab202691461020e57600080fd5b80630492c8aa14610105578063150b7a021461012b5780635012554614610163578063572b6c0514610178575b600080fd5b6101186101133660046112ed565b610294565b6040519081526020015b60405180910390f35b61014a610139366004611335565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610122565b6101766101713660046113d4565b6102ee565b005b6101b86101863660046113ed565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b6040519015158152602001610122565b6101db6101d63660046113ed565b6105bb565b60405161012291906114ee565b6101186101f63660046113d4565b61078a565b6101766102093660046113d4565b61079d565b61022161021c3660046113d4565b61098d565b604051610122919061153d565b610236610a4f565b604051610122919061154c565b610118610add565b6101db610af9565b6101766102613660046115a1565b610c69565b6101766102743660046113d4565b610f4b565b6101766102873660046115d6565b6110b3565b61023661117e565b6040516bffffffffffffffffffffffff19606086811b821660208401526034830186905284901b16605482015260688101829052600090608801604051602081830303815290604052805190602001209050949350505050565b6102f78161098d565b8060c001516001600160a01b031661030d61118b565b6001600160a01b031614158015610341575080606001516001600160a01b031661033561118b565b6001600160a01b031614155b156103775761034e61118b565b60405163986129df60e01b81526001600160a01b03909116600482015260240160405180910390fd5b600082815260208190526040808220815161014081019092528054829060ff1660048111156103a8576103a861140a565b60048111156103b9576103b961140a565b815281546001600160a01b0361010091829004811660208401526001840154604084015260028401548116606084015260038401548116608084015260048085015460a0850152600585015490911660c0840152600684015460e084015260078401549183019190915260089092015461012090910152909150815160048111156104465761044661140a565b14156104655760405163c96c756960e01b815260040160405180910390fd5b6000838152602081905260409020805460ff1916600490811790915581516002918111156104955761049561140a565b141561050a57608081015160c082015160a08301516040516323b872dd60e01b81526001600160a01b03909316926323b872dd926104d792309260040161160e565b600060405180830381600087803b1580156104f157600080fd5b505af1158015610505573d6000803e3d6000fd5b505050505b6020810151606082015160408084015190516323b872dd60e01b81526001600160a01b03909316926323b872dd9261054692309260040161160e565b600060405180830381600087803b15801561056057600080fd5b505af1158015610574573d6000803e3d6000fd5b5050505061058061118b565b6001600160a01b0316837f0fce4b8a7601ae2c2faf59189a7af2cf6bb9c383b28d7e846facf71d10cf1ba360405160405180910390a3505050565b6001600160a01b0381166000908152600160205260408120546060918167ffffffffffffffff8111156105f0576105f0611632565b60405190808252806020026020018201604052801561062957816020015b61061661127f565b81526020019060019003908161060e5790505b5090506000805b61063a60026111dd565b811015610780576001600160a01b0386166000806106596002856111e7565b81526020810191909152604001600020600201546001600160a01b0316141561076e5760008061068a6002846111e7565b815260208101919091526040908101600020815161014081019092528054829060ff1660048111156106be576106be61140a565b60048111156106cf576106cf61140a565b815281546001600160a01b03610100918290048116602084015260018401546040840152600284015481166060840152600384015481166080840152600484015460a084015260058401541660c0830152600683015460e083015260078301549082015260089091015461012090910152835184908490811061075457610754611648565b6020026020010181905250818061076a90611674565b9250505b8061077881611674565b915050610630565b5090949350505050565b60006107976002836111e7565b92915050565b6107a68161098d565b516002808260048111156107bc576107bc61140a565b146107da5760405163c96c756960e01b815260040160405180910390fd5b60008381526020819052604090819020805460ff1916600317808255600582015460019092015492516323b872dd60e01b81526101009091046001600160a01b03908116936323b872dd93610838933093909116919060040161160e565b600060405180830381600087803b15801561085257600080fd5b505af1158015610866573d6000803e3d6000fd5b505050600084815260208190526040808220600181015460059091015491519093506001600160a01b039091169186917f028ab133c73f6c00ad0c5896ef40eff18378acd3d7f2ecf573c2706582bf73bf9190a4600083815260208190526040908190206003810154600282015460049283015493516323b872dd60e01b81526001600160a01b03928316946323b872dd9461090694309416920161160e565b600060405180830381600087803b15801561092057600080fd5b505af1158015610934573d6000803e3d6000fd5b505050600084815260208190526040808220600481015460029091015491519093506001600160a01b039091169186917f028ab133c73f6c00ad0c5896ef40eff18378acd3d7f2ecf573c2706582bf73bf9190a4505050565b61099561127f565b60008281526020819052604090819020815161014081019092528054829060ff1660048111156109c7576109c761140a565b60048111156109d8576109d861140a565b815281546001600160a01b03610100918290048116602084015260018401546040840152600284015481166060840152600384015481166080840152600484015460a084015260058401541660c0830152600683015460e08301526007830154908201526008909101546101209091015292915050565b60048054610a5c9061168f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a889061168f565b8015610ad55780601f10610aaa57610100808354040283529160200191610ad5565b820191906000526020600020905b815481529060010190602001808311610ab857829003601f168201915b505050505081565b6000610ae960026111dd565b610af49060016116ca565b905090565b60606000610b0760026111dd565b905060008167ffffffffffffffff811115610b2457610b24611632565b604051908082528060200260200182016040528015610b5d57816020015b610b4a61127f565b815260200190600190039081610b425790505b50905060005b8151811015610c6257600080610b7a6002846111e7565b815260208101919091526040908101600020815161014081019092528054829060ff166004811115610bae57610bae61140a565b6004811115610bbf57610bbf61140a565b815281546001600160a01b03610100918290048116602084015260018401546040840152600284015481166060840152600384015481166080840152600484015460a084015260058401541660c0830152600683015460e0830152600783015490820152600890910154610120909101528251839083908110610c4457610c44611648565b60200260200101819052508080610c5a90611674565b915050610b63565b5092915050565b8083834283111580610cf75750610c7e61118b565b6040516331a9108f60e11b8152600481018390526001600160a01b0391821691841690636352211e90602401602060405180830381865afa158015610cc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ceb91906116e2565b6001600160a01b031614155b15610d155760405163a8b6e4e160e01b815260040160405180910390fd5b610d1d61127f565b60008152610d2961118b565b6001600160a01b039081166060830152871660208201526040810186905260e08101859052610d56610add565b61010082015260608101516001600160a01b03166000908152600160205260409020610d859080546001019055565b6000610da4826020015183604001518460600151856101000151610294565b61012083018190529050610db96002826111fa565b5060008181526020819052604090208251815484929190829060ff19166001836004811115610dea57610dea61140a565b02179055506020828101518254610100600160a81b0319166101006001600160a01b03928316810291909117845560408086015160018601556060808701516002870180546001600160a01b03199081169287169290921790556080880151600388018054831691871691909117905560a088015160048089019190915560c08901516005890180549093169087161790915560e088015160068801559287015160078701556101209096015160089095019490945591860151938601518684015193516323b872dd60e01b815294909116936323b872dd93610ecf9330920161160e565b600060405180830381600087803b158015610ee957600080fd5b505af1158015610efd573d6000803e3d6000fd5b50505050816040015182602001516001600160a01b0316827f010879a90a145027e233712ca7222b8ca566453aa030286cec4093eda85b4f9c60405160405180910390a45050505050505050565b610f548161098d565b51600180826004811115610f6a57610f6a61140a565b14610f885760405163c96c756960e01b815260040160405180910390fd5b6000838152602081905260409020600501546001600160a01b0316610fab61118b565b6001600160a01b031614610fd257604051638eb9015960e01b815260040160405180910390fd5b60008381526020819052604090819020805460ff191660021781556003810154600582015460049283015493516323b872dd60e01b81526001600160a01b03928316946323b872dd9461102b949093169230920161160e565b600060405180830381600087803b15801561104557600080fd5b505af1158015611059573d6000803e3d6000fd5b505050600084815260208190526040902060040154905061107861118b565b6001600160a01b0316847f182fa52899142d44ff5c45a6354d3b3e868d5b07db6a65580b39bd321bdaf8ac60405160405180910390a4505050565b6000848152602081905260409020600201546001600160a01b03166110d661118b565b6001600160a01b0316146110fd57604051631022a99960e31b815260040160405180910390fd5b600084815260208190526040808220805460ff191660011781556003810180546001600160a01b03199081166001600160a01b038981169190911790925560048301869055600590920180549092169086161790555185917ff3f018152389905a3ac106d345dff683d42bfa5ceda59730dcf9b188e7ad2a7291a250505050565b60058054610a5c9061168f565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331480156111c6575060143610155b156111d8575060131936013560601c90565b503390565b6000610797825490565b60006111f38383611206565b9392505050565b60006111f38383611230565b600082600001828154811061121d5761121d611648565b9060005260206000200154905092915050565b600081815260018301602052604081205461127757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610797565b506000610797565b604080516101408101909152806000815260006020820181905260408201819052606082018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101209091015290565b6001600160a01b03811681146112ea57600080fd5b50565b6000806000806080858703121561130357600080fd5b843561130e816112d5565b9350602085013592506040850135611325816112d5565b9396929550929360600135925050565b60008060008060006080868803121561134d57600080fd5b8535611358816112d5565b94506020860135611368816112d5565b935060408601359250606086013567ffffffffffffffff8082111561138c57600080fd5b818801915088601f8301126113a057600080fd5b8135818111156113af57600080fd5b8960208285010111156113c157600080fd5b9699959850939650602001949392505050565b6000602082840312156113e657600080fd5b5035919050565b6000602082840312156113ff57600080fd5b81356111f3816112d5565b634e487b7160e01b600052602160045260246000fd5b6005811061143e57634e487b7160e01b600052602160045260246000fd5b9052565b61144d828251611420565b602081015161146760208401826001600160a01b03169052565b5060408101516040830152606081015161148c60608401826001600160a01b03169052565b5060808101516114a760808401826001600160a01b03169052565b5060a081015160a083015260c08101516114cc60c08401826001600160a01b03169052565b5060e08181015190830152610100808201519083015261012090810151910152565b6020808252825182820181905260009190848201906040850190845b818110156115315761151d838551611442565b92840192610140929092019160010161150a565b50909695505050505050565b61014081016107978284611442565b600060208083528351808285015260005b818110156115795785810183015185820160400152820161155d565b8181111561158b576000604083870101525b50601f01601f1916929092016040019392505050565b6000806000606084860312156115b657600080fd5b83356115c1816112d5565b95602085013595506040909401359392505050565b600080600080608085870312156115ec57600080fd5b8435935060208501356115fe816112d5565b92506040850135611325816112d5565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156116885761168861165e565b5060010190565b600181811c908216806116a357607f821691505b602082108114156116c457634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156116dd576116dd61165e565b500190565b6000602082840312156116f457600080fd5b81516111f3816112d556fea164736f6c634300080b000a";

type WegaERC721EscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WegaERC721EscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WegaERC721Escrow__factory extends ContractFactory {
  constructor(...args: WegaERC721EscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    version: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WegaERC721Escrow> {
    return super.deploy(
      name,
      version,
      overrides || {}
    ) as Promise<WegaERC721Escrow>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    version: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, version, overrides || {});
  }
  override attach(address: string): WegaERC721Escrow {
    return super.attach(address) as WegaERC721Escrow;
  }
  override connect(signer: Signer): WegaERC721Escrow__factory {
    return super.connect(signer) as WegaERC721Escrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WegaERC721EscrowInterface {
    return new utils.Interface(_abi) as WegaERC721EscrowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WegaERC721Escrow {
    return new Contract(address, _abi, signerOrProvider) as WegaERC721Escrow;
  }
}
