/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  WegaGameController,
  WegaGameControllerInterface,
} from "../../contracts/WegaGameController";

const _abi = [
  {
    inputs: [],
    name: "WegaGameController_InvalidGameState",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "escrowHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IWega.WegaType",
        name: "gameType",
        type: "uint8",
      },
    ],
    name: "GameCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "escrowHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "winners",
        type: "address[]",
      },
    ],
    name: "WinnerDeclaration",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20EscrowAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "chanceContract",
        type: "address",
      },
    ],
    name: "__WegaGameController_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20EscrowAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "chanceContract",
        type: "address",
      },
    ],
    name: "__WegaGameController_init_unchained",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "requiredPlayerNum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wagerAmount",
        type: "uint256",
      },
      {
        internalType: "enum IWega.WegaType",
        name: "gameType",
        type: "uint8",
      },
    ],
    name: "createGameAndDepositInitialWager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "escrowHash",
        type: "bytes32",
      },
    ],
    name: "depositOrPlay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20Escrow",
    outputs: [
      {
        internalType: "contract IWegaERC20Escrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506114d0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a0c8d2ec1161005b578063a0c8d2ec146100e6578063f155ba3e146100f9578063f2fde38b1461010c578063fe2810cf1461011f57600080fd5b806327f2b6be1461008d578063715018a6146100a25780638da5cb5b146100aa578063950e5ca3146100d3575b600080fd5b6100a061009b366004611141565b610132565b005b6100a061041e565b6033546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6100a06100e136600461116f565b610432565b6100a06100f43660046111a8565b610553565b6100a061010736600461116f565b6107bf565b6100a061011a3660046111f6565b6108c2565b6065546100b7906001600160a01b031681565b6000818152606c6020526040808220815160c081019092528054829060ff16600181111561016257610162611213565b600181111561017357610173611213565b81528154602090910190610100900460ff16600281111561019657610196611213565b60028111156101a7576101a7611213565b81526001820154602082015260028201546040808301919091526003830154606083015260049283015460809092019190915260655490516331627f4360e21b81529182018590529192506000916001600160a01b03169063c589fd0c9060240160c060405180830381865afa158015610225573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610249919061125e565b905060008260200151600281111561026357610263611213565b141580610286575060018260200151600281111561028357610283611213565b14155b156102a457604051634c50cdb760e11b815260040160405180910390fd5b6000826020015160028111156102bc576102bc611213565b036103b4576065546001600160a01b031663d954863c843360408086015190516001600160e01b031960e086901b16815260048101939093526001600160a01b0390911660248301526044820152606401600060405180830381600087803b15801561032757600080fd5b505af115801561033b573d6000803e3d6000fd5b50505050816060015182608001511015610395576000838152606c6020526040812060030180549161036c83611308565b919050555061038f61037b3390565b60008581526069602052604090209061093b565b50505050565b50506000908152606c60205260409020805461ff001916610100179055565b6001826020015160028111156103cc576103cc611213565b036104195760008381526069602052604090206103fd9084906103ee90610959565b8460a00151856040015161096d565b6000838152606c60205260409020805461ff0019166102001790555b505050565b610426610a34565b6104306000610a8e565b565b600054610100900460ff16158080156104525750600054600160ff909116105b8061046c5750303b15801561046c575060005460ff166001145b6104d45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156104f7576000805461ff0019166101001790555b6104ff610ae0565b61050983836107bf565b8015610419576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6065546000906001600160a01b031663e6528f7e86336040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101879052606481018690526084016020604051808303816000875af11580156105c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e89190611321565b90506106023360008381526069602052604090209061093b565b5061063d6040805160c08101909152806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8083600181111561065057610650611213565b9081600181111561066357610663611213565b905250600060208201819052606a9084600181111561068457610684611213565b600181111561069557610695611213565b815260200190815260200160002054816040018181525050606b60008460018111156106c3576106c3611213565b60018111156106d4576106d4611213565b8152602080820192909252604090810160009081205460a085015260608401889052600160808501819052858252606c90935220825181548493839160ff191690838181111561072657610726611213565b021790555060208201518154829061ff00191661010083600281111561074e5761074e611213565b021790555060408201516001820155606082015160028201556080820151600382015560a090910151600490910155817f122f81044deeaa6b583e56185be77c92b8072c1b97e817d2146c439dcdd03eec33856040516107af92919061133a565b60405180910390a2505050505050565b600054610100900460ff166107e65760405162461bcd60e51b81526004016104cb90611375565b606580546001600160a01b038085166001600160a01b031992831617909255606e805492841692909116919091179055610824606d80546001019055565b505060067f6021fa82de881996a3e5fd2d032f74dfe72746b8a66c5510d4ab1a3cb78915075560027ff585789965ba69220d5ce3dc1b444eb22ff546f2650694fef8fafe9c26560af9819055606b60205260037fc8cc8bda7ad4886bea3ebbdafa02e79d37c39bf4011696b26a31a0802fd9458b5560016000527fa775687211c2b3346a0f5a2a0e7590e6c1838453e3785e6dd2a8efd6265ddf1555565b6108ca610a34565b6001600160a01b03811661092f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cb565b61093881610a8e565b50565b6000610950836001600160a01b038416610b0f565b90505b92915050565b6060600061096683610b5e565b9392505050565b61097b848483600186610bba565b5060006109888585610d8a565b606554604051630996a9eb60e21b81529192506001600160a01b03169063265aa7ac906109bb90889085906004016113c0565b600060405180830381600087803b1580156109d557600080fd5b505af11580156109e9573d6000803e3d6000fd5b50505050806040516109fb9190611417565b6040519081900381209086907fff69779526003a42f2f0770ec16cc0c045617eacba78439d6509bdb13a0d1d9390600090a35050505050565b6033546001600160a01b031633146104305760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104cb565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610b075760405162461bcd60e51b81526004016104cb90611375565b610430610e6b565b6000818152600183016020526040812054610b5657508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610953565b506000610953565b606081600001805480602002602001604051908101604052809291908181526020018280548015610bae57602002820191906000526020600020905b815481526020019060010190808311610b9a575b50505050509050919050565b600081831115610bcc57506001610d81565b6000855167ffffffffffffffff811115610be857610be8611229565b604051908082528060200260200182016040528015610c11578160200160208202803683370190505b50905060005b8651811015610d5a57606e546000906001600160a01b031663e62bdf4988610c3e606d5490565b8b8681518110610c5057610c50611456565b60200260200101516040518463ffffffff1660e01b8152600401610c909392919092835260208301919091526001600160a01b0316604082015260600190565b6020604051808303816000875af1158015610caf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd39190611321565b9050610d388682606660008d815260200190815260200160002060008c8781518110610d0157610d01611456565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020610e9b9092919063ffffffff16565b50610d47606d80546001019055565b5080610d5281611308565b915050610c17565b50610d66878783610ea8565b610d7d878787610d7788600161146c565b87610bba565b9150505b95945050505050565b60606000610d988484610fd0565b905060005b8351811015610e4b5760008581526067602052604081208551849290879085908110610dcb57610dcb611456565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205403610e3957610e37848281518110610e0e57610e0e611456565b60200260200101516068600088815260200190815260200160002061093b90919063ffffffff16565b505b80610e4381611308565b915050610d9d565b506000848152606860205260409020610e6390610959565b949350505050565b600054610100900460ff16610e925760405162461bcd60e51b81526004016104cb90611375565b61043033610a8e565b6000610e6384848461111d565b6040516345eac34160e11b815260009073__$dd7e339caebe69876c52f244f0e45f1c53$__90638bd5868290610ee290859060040161147f565b602060405180830381865af4158015610eff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f239190611321565b905060005b8351811015610fc95781838281518110610f4457610f44611456565b602002602001015103610fb757606760008681526020019081526020016000206000858381518110610f7857610f78611456565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000815480929190610fb190611308565b91905055505b80610fc181611308565b915050610f28565b5050505050565b600080825167ffffffffffffffff811115610fed57610fed611229565b604051908082528060200260200182016040528015611016578160200160208202803683370190505b50905060005b83518110156110a45760676000868152602001908152602001600020600085838151811061104c5761104c611456565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061108757611087611456565b60209081029190910101528061109c81611308565b91505061101c565b506040516345eac34160e11b815273__$dd7e339caebe69876c52f244f0e45f1c53$__90638bd58682906110dc90849060040161147f565b602060405180830381865af41580156110f9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e639190611321565b60008281526002840160205260408120829055610e63848460006109508383610b0f565b60006020828403121561115357600080fd5b5035919050565b6001600160a01b038116811461093857600080fd5b6000806040838503121561118257600080fd5b823561118d8161115a565b9150602083013561119d8161115a565b809150509250929050565b600080600080608085870312156111be57600080fd5b84356111c98161115a565b935060208501359250604085013591506060850135600281106111eb57600080fd5b939692955090935050565b60006020828403121561120857600080fd5b81356109668161115a565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80516004811061124e57600080fd5b919050565b805161124e8161115a565b600060c0828403121561127057600080fd5b60405160c0810181811067ffffffffffffffff821117156112a157634e487b7160e01b600052604160045260246000fd5b6040526112ad8361123f565b815260208301516020820152604083015160408201526112cf60608401611253565b60608201526080830151608082015260a083015160a08201528091505092915050565b634e487b7160e01b600052601160045260246000fd5b60006001820161131a5761131a6112f2565b5060010190565b60006020828403121561133357600080fd5b5051919050565b6001600160a01b0383168152604081016002831061136857634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000604082018483526020604081850152818551808452606086019150828701935060005b8181101561140a5784516001600160a01b0316835293830193918301916001016113e5565b5090979650505050505050565b815160009082906020808601845b8381101561144a5781516001600160a01b031685529382019390820190600101611425565b50929695505050505050565b634e487b7160e01b600052603260045260246000fd5b80820180821115610953576109536112f2565b6020808252825182820181905260009190848201906040850190845b818110156114b75783518352928401929184019160010161149b565b5090969550505050505056fea164736f6c6343000813000a";

type WegaGameControllerConstructorParams =
  | [linkLibraryAddresses: WegaGameControllerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WegaGameControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class WegaGameController__factory extends ContractFactory {
  constructor(...args: WegaGameControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        WegaGameController__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: WegaGameControllerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$dd7e339caebe69876c52f244f0e45f1c53\\$__", "g"),
      linkLibraryAddresses["contracts/utils/Arrays.sol:Arrays"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WegaGameController> {
    return super.deploy(overrides || {}) as Promise<WegaGameController>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WegaGameController {
    return super.attach(address) as WegaGameController;
  }
  override connect(signer: Signer): WegaGameController__factory {
    return super.connect(signer) as WegaGameController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WegaGameControllerInterface {
    return new utils.Interface(_abi) as WegaGameControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WegaGameController {
    return new Contract(address, _abi, signerOrProvider) as WegaGameController;
  }
}

export interface WegaGameControllerLibraryAddresses {
  ["contracts/utils/Arrays.sol:Arrays"]: string;
}
