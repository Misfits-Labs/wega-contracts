/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721DummyOne,
  ERC721DummyOneInterface,
} from "../../../contracts/dummies/ERC721DummyOne";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getNFT",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "gradientOne",
            type: "string",
          },
          {
            internalType: "string",
            name: "gradientTwo",
            type: "string",
          },
        ],
        internalType: "struct ERC721DummyOne.NFT",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "gradientOne",
            type: "string",
          },
          {
            internalType: "string",
            name: "gradientTwo",
            type: "string",
          },
        ],
        internalType: "struct ERC721DummyOne.NFT[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "gradientOne",
        type: "string",
      },
      {
        internalType: "string",
        name: "gradientTwo",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ec238038062001ec2833981016040819052620000349162000251565b8151829082906200004d906000906020850190620000de565b50805162000063906001906020840190620000de565b505050620000806200007a6200008860201b60201c565b6200008c565b5050620002f8565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ec90620002bb565b90600052602060002090601f0160209004810192826200011057600085556200015b565b82601f106200012b57805160ff19168380011785556200015b565b828001600101855582156200015b579182015b828111156200015b5782518255916020019190600101906200013e565b50620001699291506200016d565b5090565b5b808211156200016957600081556001016200016e565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ac57600080fd5b81516001600160401b0380821115620001c957620001c962000184565b604051601f8301601f19908116603f01168101908282118183101715620001f457620001f462000184565b816040528381526020925086838588010111156200021157600080fd5b600091505b8382101562000235578582018301518183018401529082019062000216565b83821115620002475760008385830101525b9695505050505050565b600080604083850312156200026557600080fd5b82516001600160401b03808211156200027d57600080fd5b6200028b868387016200019a565b93506020850151915080821115620002a257600080fd5b50620002b1858286016200019a565b9150509250929050565b600181811c90821680620002d057607f821691505b60208210811415620002f257634e487b7160e01b600052602260045260246000fd5b50919050565b611bba80620003086000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063714cff56116100ad578063b88d4fde11610071578063b88d4fde1461027b578063c87b56dd1461028e578063e985e9c5146102a1578063eca81d42146102dd578063f2fde38b146102f057600080fd5b8063714cff561461023d578063715018a6146102475780638da5cb5b1461024f57806395d89b4114610260578063a22cb4651461026857600080fd5b806323b872dd116100f457806323b872dd146101c357806342842e0e146101d6578063576f7ea7146101e95780636352211e1461020957806370a082311461021c57600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b314610199578063227212f2146101ae575b600080fd5b61014461013f3660046115bb565b610303565b60405190151581526020015b60405180910390f35b610161610355565b6040516101509190611630565b61018161017c366004611643565b6103e7565b6040516001600160a01b039091168152602001610150565b6101ac6101a7366004611678565b61040e565b005b6101b6610529565b60405161015091906116f5565b6101ac6101d1366004611757565b610757565b6101ac6101e4366004611757565b610788565b6101fc6101f7366004611643565b6107a3565b6040516101509190611793565b610181610217366004611643565b61093c565b61022f61022a3660046117a6565b61099c565b604051908152602001610150565b60075461022f9081565b6101ac610a22565b6006546001600160a01b0316610181565b610161610a36565b6101ac6102763660046117c1565b610a45565b6101ac610289366004611889565b610a54565b61016161029c366004611643565b610a8c565b6101446102af366004611905565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101ac6102eb366004611958565b610b19565b6101ac6102fe3660046117a6565b610bea565b60006001600160e01b031982166380ac58cd60e01b148061033457506001600160e01b03198216635b5e139f60e01b145b8061034f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610364906119cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610390906119cc565b80156103dd5780601f106103b2576101008083540402835291602001916103dd565b820191906000526020600020905b8154815290600101906020018083116103c057829003601f168201915b5050505050905090565b60006103f282610c63565b506000908152600460205260409020546001600160a01b031690565b60006104198261093c565b9050806001600160a01b0316836001600160a01b0316141561048c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104a857506104a881336102af565b61051a5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610483565b6105248383610cc2565b505050565b6060600061053660075490565b67ffffffffffffffff81111561054e5761054e6117fd565b6040519080825280602002602001820160405280156105b357816020015b6105a0604051806080016040528060006001600160a01b031681526020016000815260200160608152602001606081525090565b81526020019060019003908161056c5790505b50905060005b60075481101561075157600081815260086020908152604091829020825160808101845281546001600160a01b03168152600182015492810192909252600281018054929391929184019161060d906119cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610639906119cc565b80156106865780601f1061065b57610100808354040283529160200191610686565b820191906000526020600020905b81548152906001019060200180831161066957829003601f168201915b5050505050815260200160038201805461069f906119cc565b80601f01602080910402602001604051908101604052809291908181526020018280546106cb906119cc565b80156107185780601f106106ed57610100808354040283529160200191610718565b820191906000526020600020905b8154815290600101906020018083116106fb57829003601f168201915b50505050508152505082828151811061073357610733611a01565b6020026020010181905250808061074990611a17565b9150506105b9565b50919050565b6107613382610d30565b61077d5760405162461bcd60e51b815260040161048390611a40565b610524838383610daf565b61052483838360405180602001604052806000815250610a54565b6107d7604051806080016040528060006001600160a01b031681526020016000815260200160608152602001606081525090565b600082815260086020908152604091829020825160808101845281546001600160a01b031681526001820154928101929092526002810180549293919291840191610821906119cc565b80601f016020809104026020016040519081016040528092919081815260200182805461084d906119cc565b801561089a5780601f1061086f5761010080835404028352916020019161089a565b820191906000526020600020905b81548152906001019060200180831161087d57829003601f168201915b505050505081526020016003820180546108b3906119cc565b80601f01602080910402602001604051908101604052809291908181526020018280546108df906119cc565b801561092c5780601f106109015761010080835404028352916020019161092c565b820191906000526020600020905b81548152906001019060200180831161090f57829003601f168201915b5050505050815250509050919050565b6000818152600260205260408120546001600160a01b03168061034f5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610483565b60006001600160a01b038216610a065760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610483565b506001600160a01b031660009081526003602052604090205490565b610a2a610f13565b610a346000610f6d565b565b606060018054610364906119cc565b610a50338383610fbf565b5050565b610a5e3383610d30565b610a7a5760405162461bcd60e51b815260040161048390611a40565b610a868484848461108e565b50505050565b6060610a9782610c63565b6000610ac760408051808201909152601181527068747470733a2f2f776567612e66756e2f60781b602082015290565b90506000815111610ae75760405180602001604052806000815250610b12565b80610af1846110c1565b604051602001610b02929190611a8d565b6040516020818303038152906040525b9392505050565b6040518060800160405280306001600160a01b03168152602001610b3c60075490565b81526020018381526020018281525060086000610b5860075490565b81526020808201929092526040908101600020835181546001600160a01b0319166001600160a01b039091161781558383015160018201559083015180519192610baa9260028501929091019061150c565b5060608201518051610bc691600384019160209091019061150c565b50905050610bdc83610bd760075490565b61115e565b610524600780546001019055565b610bf2610f13565b6001600160a01b038116610c575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610483565b610c6081610f6d565b50565b6000818152600260205260409020546001600160a01b0316610c605760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610483565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610cf78261093c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610d3c8361093c565b9050806001600160a01b0316846001600160a01b03161480610d8357506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610da75750836001600160a01b0316610d9c846103e7565b6001600160a01b0316145b949350505050565b826001600160a01b0316610dc28261093c565b6001600160a01b031614610de85760405162461bcd60e51b815260040161048390611abc565b6001600160a01b038216610e4a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610483565b826001600160a01b0316610e5d8261093c565b6001600160a01b031614610e835760405162461bcd60e51b815260040161048390611abc565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b03163314610a345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610483565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156110215760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610483565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611099848484610daf565b6110a584848484611178565b610a865760405162461bcd60e51b815260040161048390611b01565b606060006110ce83611276565b600101905060008167ffffffffffffffff8111156110ee576110ee6117fd565b6040519080825280601f01601f191660200182016040528015611118576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461115157611156565b611122565b509392505050565b610a5082826040518060200160405280600081525061134e565b60006001600160a01b0384163b1561126b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111bc903390899088908890600401611b53565b6020604051808303816000875af19250505080156111f7575060408051601f3d908101601f191682019092526111f491810190611b90565b60015b611251573d808015611225576040519150601f19603f3d011682016040523d82523d6000602084013e61122a565b606091505b5080516112495760405162461bcd60e51b815260040161048390611b01565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610da7565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112b55772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106112e1576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106112ff57662386f26fc10000830492506010015b6305f5e1008310611317576305f5e100830492506008015b612710831061132b57612710830492506004015b6064831061133d576064830492506002015b600a831061034f5760010192915050565b6113588383611381565b6113656000848484611178565b6105245760405162461bcd60e51b815260040161048390611b01565b6001600160a01b0382166113d75760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610483565b6000818152600260205260409020546001600160a01b03161561143c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610483565b6000818152600260205260409020546001600160a01b0316156114a15760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610483565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611518906119cc565b90600052602060002090601f01602090048101928261153a5760008555611580565b82601f1061155357805160ff1916838001178555611580565b82800160010185558215611580579182015b82811115611580578251825591602001919060010190611565565b5061158c929150611590565b5090565b5b8082111561158c5760008155600101611591565b6001600160e01b031981168114610c6057600080fd5b6000602082840312156115cd57600080fd5b8135610b12816115a5565b60005b838110156115f35781810151838201526020016115db565b83811115610a865750506000910152565b6000815180845261161c8160208601602086016115d8565b601f01601f19169290920160200192915050565b602081526000610b126020830184611604565b60006020828403121561165557600080fd5b5035919050565b80356001600160a01b038116811461167357600080fd5b919050565b6000806040838503121561168b57600080fd5b6116948361165c565b946020939093013593505050565b60018060a01b0381511682526020810151602083015260006040820151608060408501526116d36080850182611604565b9050606083015184820360608601526116ec8282611604565b95945050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561174a57603f198886030184526117388583516116a2565b9450928501929085019060010161171c565b5092979650505050505050565b60008060006060848603121561176c57600080fd5b6117758461165c565b92506117836020850161165c565b9150604084013590509250925092565b602081526000610b1260208301846116a2565b6000602082840312156117b857600080fd5b610b128261165c565b600080604083850312156117d457600080fd5b6117dd8361165c565b9150602083013580151581146117f257600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561182e5761182e6117fd565b604051601f8501601f19908116603f01168101908282118183101715611856576118566117fd565b8160405280935085815286868601111561186f57600080fd5b858560208301376000602087830101525050509392505050565b6000806000806080858703121561189f57600080fd5b6118a88561165c565b93506118b66020860161165c565b925060408501359150606085013567ffffffffffffffff8111156118d957600080fd5b8501601f810187136118ea57600080fd5b6118f987823560208401611813565b91505092959194509250565b6000806040838503121561191857600080fd5b6119218361165c565b915061192f6020840161165c565b90509250929050565b600082601f83011261194957600080fd5b610b1283833560208501611813565b60008060006060848603121561196d57600080fd5b6119768461165c565b9250602084013567ffffffffffffffff8082111561199357600080fd5b61199f87838801611938565b935060408601359150808211156119b557600080fd5b506119c286828701611938565b9150509250925092565b600181811c908216806119e057607f821691505b6020821081141561075157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415611a3957634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351611a9f8184602088016115d8565b835190830190611ab38183602088016115d8565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611b8690830184611604565b9695505050505050565b600060208284031215611ba257600080fd5b8151610b12816115a556fea164736f6c634300080b000a";

type ERC721DummyOneConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721DummyOneConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721DummyOne__factory extends ContractFactory {
  constructor(...args: ERC721DummyOneConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721DummyOne> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<ERC721DummyOne>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721DummyOne {
    return super.attach(address) as ERC721DummyOne;
  }
  override connect(signer: Signer): ERC721DummyOne__factory {
    return super.connect(signer) as ERC721DummyOne__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721DummyOneInterface {
    return new utils.Interface(_abi) as ERC721DummyOneInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721DummyOne {
    return new Contract(address, _abi, signerOrProvider) as ERC721DummyOne;
  }
}
