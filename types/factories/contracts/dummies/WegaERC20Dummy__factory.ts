/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WegaERC20Dummy,
  WegaERC20DummyInterface,
} from "../../../contracts/dummies/WegaERC20Dummy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "receivers",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b5060405162000f9638038062000f96833981016040819052620000339162000264565b6040518060400160405280600e81526020016d57656761455243323044756d6d7960901b8152506040518060400160405280600581526020016444554d4d5960d81b8152508160039081620000899190620003bc565b506004620000988282620003bc565b505050620000b5620000af6200011660201b60201c565b6200011a565b5f5b81518110156200010e57620000f9828281518110620000da57620000da62000484565b602002602001015169021e19e0c9bab24000006200016b60201b60201c565b806200010581620004ac565b915050620000b7565b5050620004e3565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216620001c65760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060025f828254620001d99190620004c7565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b5f52604160045260245ffd5b80516001600160a01b03811681146200025f575f80fd5b919050565b5f602080838503121562000276575f80fd5b82516001600160401b03808211156200028d575f80fd5b818501915085601f830112620002a1575f80fd5b815181811115620002b657620002b662000234565b8060051b604051601f19603f83011681018181108582111715620002de57620002de62000234565b604052918252848201925083810185019188831115620002fc575f80fd5b938501935b828510156200032557620003158562000248565b8452938501939285019262000301565b98975050505050505050565b600181811c908216806200034657607f821691505b6020821081036200036557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200022f575f81815260208120601f850160051c81016020861015620003935750805b601f850160051c820191505b81811015620003b4578281556001016200039f565b505050505050565b81516001600160401b03811115620003d857620003d862000234565b620003f081620003e9845462000331565b846200036b565b602080601f83116001811462000426575f84156200040e5750858301515b5f19600386901b1c1916600185901b178555620003b4565b5f85815260208120601f198616915b82811015620004565788860151825594840194600190910190840162000435565b50858210156200047457878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f60018201620004c057620004c062000498565b5060010190565b80820180821115620004dd57620004dd62000498565b92915050565b610aa580620004f15f395ff3fe608060405234801561000f575f80fd5b50600436106100f0575f3560e01c806370a0823111610093578063a457c2d711610063578063a457c2d7146101e4578063a9059cbb146101f7578063dd62ed3e1461020a578063f2fde38b1461021d575f80fd5b806370a0823114610191578063715018a6146101b95780638da5cb5b146101c157806395d89b41146101dc575f80fd5b806323b872dd116100ce57806323b872dd14610147578063313ce5671461015a578063395093511461016957806340c10f191461017c575f80fd5b806306fdde03146100f4578063095ea7b31461011257806318160ddd14610135575b5f80fd5b6100fc610230565b6040516101099190610929565b60405180910390f35b61012561012036600461098f565b6102c0565b6040519015158152602001610109565b6002545b604051908152602001610109565b6101256101553660046109b7565b6102d9565b60405160128152602001610109565b61012561017736600461098f565b6102fc565b61018f61018a36600461098f565b61031d565b005b61013961019f3660046109f0565b6001600160a01b03165f9081526020819052604090205490565b61018f610333565b6005546040516001600160a01b039091168152602001610109565b6100fc610346565b6101256101f236600461098f565b610355565b61012561020536600461098f565b6103d4565b610139610218366004610a10565b6103e1565b61018f61022b3660046109f0565b61040b565b60606003805461023f90610a41565b80601f016020809104026020016040519081016040528092919081815260200182805461026b90610a41565b80156102b65780601f1061028d576101008083540402835291602001916102b6565b820191905f5260205f20905b81548152906001019060200180831161029957829003601f168201915b5050505050905090565b5f336102cd818585610484565b60019150505b92915050565b5f336102e68582856105a7565b6102f185858561061f565b506001949350505050565b5f336102cd81858561030e83836103e1565b6103189190610a79565b610484565b6103256107c1565b61032f828261081b565b5050565b61033b6107c1565b6103445f6108d8565b565b60606004805461023f90610a41565b5f338161036282866103e1565b9050838110156103c75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102f18286868403610484565b5f336102cd81858561061f565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6104136107c1565b6001600160a01b0381166104785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103be565b610481816108d8565b50565b6001600160a01b0383166104e65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103be565b6001600160a01b0382166105475760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103be565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f6105b284846103e1565b90505f198114610619578181101561060c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103be565b6106198484848403610484565b50505050565b6001600160a01b0383166106835760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103be565b6001600160a01b0382166106e55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103be565b6001600160a01b0383165f908152602081905260409020548181101561075c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103be565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610619565b6005546001600160a01b031633146103445760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103be565b6001600160a01b0382166108715760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103be565b8060025f8282546108829190610a79565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6020808352835180828501525f5b8181101561095457858101830151858201604001528201610938565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461098a575f80fd5b919050565b5f80604083850312156109a0575f80fd5b6109a983610974565b946020939093013593505050565b5f805f606084860312156109c9575f80fd5b6109d284610974565b92506109e060208501610974565b9150604084013590509250925092565b5f60208284031215610a00575f80fd5b610a0982610974565b9392505050565b5f8060408385031215610a21575f80fd5b610a2a83610974565b9150610a3860208401610974565b90509250929050565b600181811c90821680610a5557607f821691505b602082108103610a7357634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102d357634e487b7160e01b5f52601160045260245ffdfea164736f6c6343000815000a";

type WegaERC20DummyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WegaERC20DummyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WegaERC20Dummy__factory extends ContractFactory {
  constructor(...args: WegaERC20DummyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    receivers: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WegaERC20Dummy> {
    return super.deploy(receivers, overrides || {}) as Promise<WegaERC20Dummy>;
  }
  override getDeployTransaction(
    receivers: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(receivers, overrides || {});
  }
  override attach(address: string): WegaERC20Dummy {
    return super.attach(address) as WegaERC20Dummy;
  }
  override connect(signer: Signer): WegaERC20Dummy__factory {
    return super.connect(signer) as WegaERC20Dummy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WegaERC20DummyInterface {
    return new utils.Interface(_abi) as WegaERC20DummyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WegaERC20Dummy {
    return new Contract(address, _abi, signerOrProvider) as WegaERC20Dummy;
  }
}
