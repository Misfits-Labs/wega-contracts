/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IWegaERC20Escrow,
  IWegaERC20EscrowInterface,
} from "../../../contracts/escrow/IWegaERC20Escrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountsCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wager",
        type: "uint256",
      },
    ],
    name: "createWagerAndDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
    ],
    name: "getWagerRequest",
    outputs: [
      {
        components: [
          {
            internalType: "enum IEscrow.TransactionState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "escrowId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "wager",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalWager",
            type: "uint256",
          },
        ],
        internalType: "struct IWegaERC20Escrow.ERC20WagerRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWagerRequests",
    outputs: [
      {
        components: [
          {
            internalType: "enum IEscrow.TransactionState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "escrowId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "wager",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalWager",
            type: "uint256",
          },
        ],
        internalType: "struct IWegaERC20Escrow.ERC20WagerRequest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountsCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wager",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "hash",
    outputs: [
      {
        internalType: "bytes32",
        name: "escrowId_",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IWegaERC20Escrow__factory {
  static readonly abi = _abi;
  static createInterface(): IWegaERC20EscrowInterface {
    return new utils.Interface(_abi) as IWegaERC20EscrowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IWegaERC20Escrow {
    return new Contract(address, _abi, signerOrProvider) as IWegaERC20Escrow;
  }
}
