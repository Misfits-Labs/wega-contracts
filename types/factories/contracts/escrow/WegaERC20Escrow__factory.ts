/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WegaERC20Escrow,
  WegaERC20EscrowInterface,
} from "../../../contracts/escrow/WegaERC20Escrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WegaEscrow_CallerNotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "WegaEscrow_CanOnlyDepositOnce",
    type: "error",
  },
  {
    inputs: [],
    name: "WegaEscrow_InvalidRequestData",
    type: "error",
  },
  {
    inputs: [],
    name: "WegaEscrow_InvalidRequestState",
    type: "error",
  },
  {
    inputs: [],
    name: "WegaEscrow_InvalidWagerAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "WegaEscrow_MaximumWagerAmountReached",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "gameController",
        type: "address",
      },
    ],
    name: "SetGameControler",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
    ],
    name: "SetWithdrawer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "wager",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "WagerDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wager",
        type: "uint256",
      },
    ],
    name: "WagerRequestCreation",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TYPE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "containsPlayer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountsCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wager",
        type: "uint256",
      },
    ],
    name: "createWagerAndDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "currentNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "wager",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
    ],
    name: "getWagerRequest",
    outputs: [
      {
        components: [
          {
            internalType: "enum IEscrow.TransactionState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "escrowId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "wager",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalWager",
            type: "uint256",
          },
        ],
        internalType: "struct IWegaERC20Escrow.ERC20WagerRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWagerRequests",
    outputs: [
      {
        components: [
          {
            internalType: "enum IEscrow.TransactionState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "escrowId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "wager",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalWager",
            type: "uint256",
          },
        ],
        internalType: "struct IWegaERC20Escrow.ERC20WagerRequest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountsCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wager",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "hash",
    outputs: [
      {
        internalType: "bytes32",
        name: "escrowId_",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gameController_",
        type: "address",
      },
    ],
    name: "setGameController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "setWithdrawer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
    ],
    name: "wagerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "winners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600b60809081526a0544f4b454e2d45524332360ac1b60a052600c906200002c90826200017c565b5034801562000039575f80fd5b50604051620014d5380380620014d58339810160408190526200005c91620002ee565b62000067336200008d565b600a6200007583826200017c565b50600b6200008482826200017c565b50505062000354565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200010557607f821691505b6020821081036200012457634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000177575f81815260208120601f850160051c81016020861015620001525750805b601f850160051c820191505b8181101562000173578281556001016200015e565b5050505b505050565b81516001600160401b03811115620001985762000198620000dc565b620001b081620001a98454620000f0565b846200012a565b602080601f831160018114620001e6575f8415620001ce5750858301515b5f19600386901b1c1916600185901b17855562000173565b5f85815260208120601f198616915b828110156200021657888601518255948401946001909101908401620001f5565b50858210156200023457878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b5f82601f83011262000254575f80fd5b81516001600160401b0380821115620002715762000271620000dc565b604051601f8301601f19908116603f011681019082821181831017156200029c576200029c620000dc565b81604052838152602092508683858801011115620002b8575f80fd5b5f91505b83821015620002db5785820183015181830184015290820190620002bc565b5f93810190920192909252949350505050565b5f806040838503121562000300575f80fd5b82516001600160401b038082111562000317575f80fd5b620003258683870162000244565b935060208501519150808211156200033b575f80fd5b506200034a8582860162000244565b9150509250929050565b61117380620003625f395ff3fe608060405234801561000f575f80fd5b5060043610610111575f3560e01c80638fb439631161009e578063bb24fe8a1161006e578063bb24fe8a14610250578063bde0c98814610258578063c589fd0c1461027b578063f2fde38b1461029b578063ffa1ad74146102ae575f80fd5b80638fb43963146101f657806396560d2b14610215578063a3f4df7e14610228578063a56d63401461023d575f80fd5b80634277f4fd116100e45780634277f4fd146101765780636437ecfc146101b657806369a7e376146101c9578063715018a6146101de5780638da5cb5b146101e6575f80fd5b80631de26e16146101155780632753bb8d1461012a57806332b1c29114610150578063343bb45714610163575b5f80fd5b610128610123366004610e5e565b6102b6565b005b61013d610138366004610e99565b610543565b6040519081526020015b60405180910390f35b61013d61015e366004610ee2565b6105a4565b610128610171366004610f0c565b6105cd565b61019e610184366004610f4b565b60066020525f90815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610147565b61013d6101c4366004610f62565b610869565b6101d1610886565b6040516101479190610feb565b6101286109be565b5f546001600160a01b031661019e565b61013d610204366004610f4b565b5f9081526005602052604090205490565b610128610223366004610ee2565b6109d1565b610230610a9a565b6040516101479190611038565b61012861024b366004610f62565b610b26565b610230610b77565b61026b610266366004610ee2565b610b84565b6040519015158152602001610147565b61028e610289366004610f4b565b610ba2565b6040516101479190611083565b6101286102a9366004610f62565b610c30565b610230610cae565b5f82815260016020526040808220815160c081019092528054829060ff1660038111156102e5576102e5610f7b565b60038111156102f6576102f6610f7b565b8152600182015460208201526002820154604082015260038201546001600160a01b031660608201526004820154608082015260059091015460a09091015290505f8151600381111561034b5761034b610f7b565b146103695760405163c96c756960e01b815260040160405180910390fd5b8060400151821461038d57604051638df0720360e01b815260040160405180910390fd5b60a08101515f848152600560205260409020546103ab9084906110a5565b11156103ca576040516328f0f44160e01b815260040160405180910390fd5b5f8381526002602090815260408083203384529091529020541561040157604051631c1ad4dd60e21b815260040160405180910390fd5b610418335f85815260036020526040902090610cbb565b505f838152600260209081526040808320338452825280832085905585835260059091528120805484929061044e9084906110a5565b90915550505f8381526005602052604090205460a082015103610487575f838152600160208190526040909120805460ff191690911790555b60608101516001600160a01b03166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303815f875af11580156104eb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061050f91906110b8565b506040513390839085907f959acdae881e334069a6d8f372ea5748c36c3c000e0e22cbaee3c5b39e7022d2905f90a4505050565b6040516bffffffffffffffffffffffff19606087811b8216602084015286901b1660348201526048810184905260688101839052608881018290525f9060a80160405160208183030381529060405280519060200120905095945050505050565b5f8281526002602090815260408083206001600160a01b03851684529091529020545b92915050565b838383836001600160a01b03841615806105ee57506001600160a01b038316155b806105fa575060018211155b80610603575080155b156106215760405163a8b6e4e160e01b815260040160405180910390fd5b610629610e29565b5f81526001600160a01b03891660608201526040810186905261064c87876110d7565b60a082015261065a88610869565b60808201526001600160a01b0388165f908152600460205260409020805460010190555f61069382606001518a8a8a8660800151610543565b60208084018290525f8281526002825260408082206001600160a01b038e1683529092522088905590506106c8600882610ccf565b505f818152600160208190526040909120835181548593839160ff1916908360038111156106f8576106f8610f7b565b0217905550602082810151600183015560408084015160028401556060840151600380850180546001600160a01b0319166001600160a01b03909316929092179091556080850151600485015560a0909401516005909301929092555f8481529290529020610767908a610cbb565b505f81815260056020526040812080548992906107859084906110a5565b909155505060608201516040516323b872dd60e01b81526001600160a01b038b81166004830152306024830152604482018a9052909116906323b872dd906064016020604051808303815f875af11580156107e2573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061080691906110b8565b50886001600160a01b031682606001516001600160a01b031683602001517f677510b0f69fc6b4c1fbc89daa2efbba5b1e18e382946e18ba2a8ff37a3cf6a68a60405161085591815260200190565b60405180910390a450505050505050505050565b6001600160a01b0381165f908152600460205260408120546105c7565b60605f6108936008610cda565b90505f8167ffffffffffffffff8111156108af576108af6110ee565b6040519080825280602002602001820160405280156108e857816020015b6108d5610e29565b8152602001906001900390816108cd5790505b5090505f5b828110156109b75760015f610903600884610ce3565b8152602081019190915260409081015f20815160c081019092528054829060ff16600381111561093557610935610f7b565b600381111561094657610946610f7b565b8152600182015460208201526002820154604082015260038201546001600160a01b031660608201526004820154608082015260059091015460a090910152825183908390811061099957610999611102565b602002602001018190525080806109af90611116565b9150506108ed565b5092915050565b6109c6610cee565b6109cf5f610d47565b565b6007546001600160a01b0316336001600160a01b031614610a0557604051631022a99960e31b815260040160405180910390fd5b610a0f8282610b84565b610a2c5760405163a8b6e4e160e01b815260040160405180910390fd5b5f828152600160209081526040808320805460ff19166002179055600690915280822080546001600160a01b0385166001600160a01b031990911681179091559051909184917fad4847049229e7cce85d0896b220c17b069972212fc6f7ce71227514b4d916979190a35050565b600a8054610aa79061112e565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad39061112e565b8015610b1e5780601f10610af557610100808354040283529160200191610b1e565b820191905f5260205f20905b815481529060010190602001808311610b0157829003601f168201915b505050505081565b610b2e610cee565b600780546001600160a01b0319166001600160a01b0383169081179091556040517f18558df1856ad3c37833411d70b859e968790fc611ad7db99c501d74875ba5d4905f90a250565b600c8054610aa79061112e565b5f828152600360205260408120610b9b9083610d96565b9392505050565b610baa610e29565b5f8281526001602052604090819020815160c081019092528054829060ff166003811115610bda57610bda610f7b565b6003811115610beb57610beb610f7b565b8152600182015460208201526002820154604082015260038201546001600160a01b031660608201526004820154608082015260059091015460a09091015292915050565b610c38610cee565b6001600160a01b038116610ca25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610cab81610d47565b50565b600b8054610aa79061112e565b5f610b9b836001600160a01b038416610db7565b5f610b9b8383610db7565b5f6105c7825490565b5f610b9b8383610e03565b5f546001600160a01b031633146109cf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610c99565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381165f9081526001830160205260408120541515610b9b565b5f818152600183016020526040812054610dfc57508154600181810184555f8481526020808220909301849055845484825282860190935260409020919091556105c7565b505f6105c7565b5f825f018281548110610e1857610e18611102565b905f5260205f200154905092915050565b6040805160c08101909152805f81525f6020820181905260408201819052606082018190526080820181905260a09091015290565b5f8060408385031215610e6f575f80fd5b50508035926020909101359150565b80356001600160a01b0381168114610e94575f80fd5b919050565b5f805f805f60a08688031215610ead575f80fd5b610eb686610e7e565b9450610ec460208701610e7e565b94979496505050506040830135926060810135926080909101359150565b5f8060408385031215610ef3575f80fd5b82359150610f0360208401610e7e565b90509250929050565b5f805f8060808587031215610f1f575f80fd5b610f2885610e7e565b9350610f3660208601610e7e565b93969395505050506040820135916060013590565b5f60208284031215610f5b575f80fd5b5035919050565b5f60208284031215610f72575f80fd5b610b9b82610e7e565b634e487b7160e01b5f52602160045260245ffd5b805160048110610fad57634e487b7160e01b5f52602160045260245ffd5b825260208181015190830152604080820151908301526060808201516001600160a01b0316908301526080808201519083015260a090810151910152565b602080825282518282018190525f9190848201906040850190845b8181101561102c57611019838551610f8f565b9284019260c09290920191600101611006565b50909695505050505050565b5f6020808352835180828501525f5b8181101561106357858101830151858201604001528201611047565b505f604082860101526040601f19601f8301168501019250505092915050565b60c081016105c78284610f8f565b634e487b7160e01b5f52601160045260245ffd5b808201808211156105c7576105c7611091565b5f602082840312156110c8575f80fd5b81518015158114610b9b575f80fd5b80820281158282048414176105c7576105c7611091565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f6001820161112757611127611091565b5060010190565b600181811c9082168061114257607f821691505b60208210810361116057634e487b7160e01b5f52602260045260245ffd5b5091905056fea164736f6c6343000815000a";

type WegaERC20EscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WegaERC20EscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WegaERC20Escrow__factory extends ContractFactory {
  constructor(...args: WegaERC20EscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    version: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WegaERC20Escrow> {
    return super.deploy(
      name,
      version,
      overrides || {}
    ) as Promise<WegaERC20Escrow>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    version: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, version, overrides || {});
  }
  override attach(address: string): WegaERC20Escrow {
    return super.attach(address) as WegaERC20Escrow;
  }
  override connect(signer: Signer): WegaERC20Escrow__factory {
    return super.connect(signer) as WegaERC20Escrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WegaERC20EscrowInterface {
    return new utils.Interface(_abi) as WegaERC20EscrowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WegaERC20Escrow {
    return new Contract(address, _abi, signerOrProvider) as WegaERC20Escrow;
  }
}
