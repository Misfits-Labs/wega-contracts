/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WegaERC20Escrow,
  WegaERC20EscrowInterface,
} from "../../../contracts/escrow/WegaERC20Escrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WegaEscrow_CanOnlyDepositOnce",
    type: "error",
  },
  {
    inputs: [],
    name: "WegaEscrow_InvalidRequestData",
    type: "error",
  },
  {
    inputs: [],
    name: "WegaEscrow_InvalidRequestState",
    type: "error",
  },
  {
    inputs: [],
    name: "WegaEscrow_InvalidWagerAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "WegaEscrow_MaximumWagerAmountReached",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "wager",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "WagerDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wager",
        type: "uint256",
      },
    ],
    name: "WagerRequestCreation",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TYPE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountsCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wager",
        type: "uint256",
      },
    ],
    name: "createWagerAndDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "currentNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "wager",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
    ],
    name: "getWagerRequest",
    outputs: [
      {
        components: [
          {
            internalType: "enum IEscrow.TransactionState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "escrowId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "wager",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalWager",
            type: "uint256",
          },
        ],
        internalType: "struct IWegaERC20Escrow.ERC20WagerRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWagerRequests",
    outputs: [
      {
        components: [
          {
            internalType: "enum IEscrow.TransactionState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "escrowId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "wager",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalWager",
            type: "uint256",
          },
        ],
        internalType: "struct IWegaERC20Escrow.ERC20WagerRequest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountsCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wager",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "hash",
    outputs: [
      {
        internalType: "bytes32",
        name: "escrowId_",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
    ],
    name: "wagerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type WegaERC20EscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WegaERC20EscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WegaERC20Escrow__factory extends ContractFactory {
  constructor(...args: WegaERC20EscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    version: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WegaERC20Escrow> {
    return super.deploy(
      name,
      version,
      overrides || {}
    ) as Promise<WegaERC20Escrow>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    version: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, version, overrides || {});
  }
  override attach(address: string): WegaERC20Escrow {
    return super.attach(address) as WegaERC20Escrow;
  }
  override connect(signer: Signer): WegaERC20Escrow__factory {
    return super.connect(signer) as WegaERC20Escrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WegaERC20EscrowInterface {
    return new utils.Interface(_abi) as WegaERC20EscrowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WegaERC20Escrow {
    return new Contract(address, _abi, signerOrProvider) as WegaERC20Escrow;
  }
}
