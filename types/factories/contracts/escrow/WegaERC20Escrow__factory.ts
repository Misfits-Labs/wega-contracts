/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WegaERC20Escrow,
  WegaERC20EscrowInterface,
} from "../../../contracts/escrow/WegaERC20Escrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WegaEscrow_InvalidRequestData",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "WagerRequestCreation",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TYPE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wager",
        type: "uint256",
      },
    ],
    name: "createWagerAndDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "escrowId",
        type: "bytes32",
      },
    ],
    name: "getWagerRequest",
    outputs: [
      {
        components: [
          {
            internalType: "enum IEscrow.TransactionState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "escrowId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "wager",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "accounts",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct IWegaERC20Escrow.ERC20WagerRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWagerRequests",
    outputs: [
      {
        components: [
          {
            internalType: "enum IEscrow.TransactionState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "escrowId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "wager",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "accounts",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct IWegaERC20Escrow.ERC20WagerRequest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wager",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "hash",
    outputs: [
      {
        internalType: "bytes32",
        name: "escrowId_",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0604052600b60a08190526a0544f4b454e2d45524332360ac1b60c09081526200002e916007919062000098565b503480156200003c57600080fd5b5060405162000ee138038062000ee18339810160408190526200005f916200020b565b600060805281516200007990600590602085019062000098565b5080516200008f90600690602084019062000098565b505050620002b2565b828054620000a69062000275565b90600052602060002090601f016020900481019282620000ca576000855562000115565b82601f10620000e557805160ff191683800117855562000115565b8280016001018555821562000115579182015b8281111562000115578251825591602001919060010190620000f8565b506200012392915062000127565b5090565b5b8082111562000123576000815560010162000128565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200016657600080fd5b81516001600160401b03808211156200018357620001836200013e565b604051601f8301601f19908116603f01168101908282118183101715620001ae57620001ae6200013e565b81604052838152602092508683858801011115620001cb57600080fd5b600091505b83821015620001ef5785820183015181830184015290820190620001d0565b83821115620002015760008385830101525b9695505050505050565b600080604083850312156200021f57600080fd5b82516001600160401b03808211156200023757600080fd5b620002458683870162000154565b935060208501519150808211156200025c57600080fd5b506200026b8582860162000154565b9150509250929050565b600181811c908216806200028a57607f821691505b60208210811415620002ac57634e487b7160e01b600052602260045260246000fd5b50919050565b608051610c14620002cd600039600060bd0152610c146000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063adb610a311610066578063adb610a31461012c578063bb24fe8a14610142578063c589fd0c1461014a578063cfc912a51461016a578063ffa1ad741461017d57600080fd5b8063343bb45714610098578063572b6c05146100ad57806369a7e37614610102578063a3f4df7e14610117575b600080fd5b6100ab6100a6366004610927565b610185565b005b6100ed6100bb366004610969565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b60405190151581526020015b60405180910390f35b61010a6103e7565b6040516100f99190610a4b565b61011f610595565b6040516100f99190610aad565b610134610623565b6040519081526020016100f9565b61011f61063f565b61015d610158366004610b02565b61064c565b6040516100f99190610b1b565b610134610178366004610927565b610750565b61011f6107aa565b838382846001600160a01b03841615806101a657506001600160a01b038316155b806101b85750811580156101b8575080155b156101d65760405163a8b6e4e160e01b815260040160405180910390fd5b6101de61085b565b60008152608081015180518991906101f4610b2e565b6001600160a01b0392831660209182029290920101528916606082015260408101869052610220610623565b60a08201526001600160a01b038816600090815260016020526040902087905561024e600280546001019055565b600061026882606001518a84604001518560a00151610750565b60208301819052905061027c6003826107b7565b5060008181526020819052604090208251815484929190829060ff191660018360028111156102ad576102ad610984565b021790555060208281015160018301556040830151600283015560608301516003830180546001600160a01b0319166001600160a01b03909216919091179055608083015180516103049260048501920190610891565b5060a0919091015160059091015560608201516040516323b872dd60e01b81526001600160a01b038b81166004830152306024830152604482018b9052909116906323b872dd906064016020604051808303816000875af115801561036d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103919190610b44565b50886001600160a01b031682606001516001600160a01b031683602001517f24483e68b0d01fca8fbafecba95079585ac57a38a990f73cc6a18db9ee12f66260405160405180910390a450505050505050505050565b606060006103f560036107cc565b905060008167ffffffffffffffff81111561041257610412610b6d565b60405190808252806020026020018201604052801561044b57816020015b61043861085b565b8152602001906001900390816104305790505b50905060005b8281101561058e576000806104676003846107d6565b815260208101919091526040908101600020815160c081019092528054829060ff16600281111561049a5761049a610984565b60028111156104ab576104ab610984565b815260200160018201548152602001600282015481526020016003820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016004820180548060200260200160405190810160405280929190818152602001828054801561054b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161052d575b5050505050815260200160058201548152505082828151811061057057610570610b2e565b6020026020010181905250808061058690610b99565b915050610451565b5092915050565b600580546105a290610bb4565b80601f01602080910402602001604051908101604052809291908181526020018280546105ce90610bb4565b801561061b5780601f106105f05761010080835404028352916020019161061b565b820191906000526020600020905b8154815290600101906020018083116105fe57829003601f168201915b505050505081565b600061062f60036107cc565b61063a906001610bef565b905090565b600780546105a290610bb4565b61065461085b565b60008281526020819052604090819020815160c081019092528054829060ff16600281111561068557610685610984565b600281111561069657610696610984565b815260200160018201548152602001600282015481526020016003820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016004820180548060200260200160405190810160405280929190818152602001828054801561073657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610718575b505050505081526020016005820154815250509050919050565b6040516bffffffffffffffffffffffff19606086811b8216602084015285901b1660348201526048810183905260688101829052600090608801604051602081830303815290604052805190602001209050949350505050565b600680546105a290610bb4565b60006107c383836107e2565b90505b92915050565b60006107c6825490565b60006107c38383610831565b6000818152600183016020526040812054610829575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107c6565b5060006107c6565b600082600001828154811061084857610848610b2e565b9060005260206000200154905092915050565b6040805160c081019091528060008152600060208201819052604082018190526060808301829052608083015260a09091015290565b8280548282559060005260206000209081019282156108e6579160200282015b828111156108e657825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906108b1565b506108f29291506108f6565b5090565b5b808211156108f257600081556001016108f7565b80356001600160a01b038116811461092257600080fd5b919050565b6000806000806080858703121561093d57600080fd5b6109468561090b565b93506109546020860161090b565b93969395505050506040820135916060013590565b60006020828403121561097b57600080fd5b6107c38261090b565b634e487b7160e01b600052602160045260246000fd5b600060c083018251600381106109c057634e487b7160e01b600052602160045260246000fd5b845260208381015181860152604080850151908601526060808501516001600160a01b039081169187019190915260808086015160c0918801919091528051938490528201926000919060e08801905b80841015610a3257855183168252948401946001939093019290840190610a10565b5060a087015160a0890152809550505050505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610aa057603f19888603018452610a8e85835161099a565b94509285019290850190600101610a72565b5092979650505050505050565b600060208083528351808285015260005b81811015610ada57858101830151858201604001528201610abe565b81811115610aec576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215610b1457600080fd5b5035919050565b6020815260006107c3602083018461099a565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610b5657600080fd5b81518015158114610b6657600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610bad57610bad610b83565b5060010190565b600181811c90821680610bc857607f821691505b60208210811415610be957634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610c0257610c02610b83565b50019056fea164736f6c634300080b000a";

type WegaERC20EscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WegaERC20EscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WegaERC20Escrow__factory extends ContractFactory {
  constructor(...args: WegaERC20EscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    version: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WegaERC20Escrow> {
    return super.deploy(
      name,
      version,
      overrides || {}
    ) as Promise<WegaERC20Escrow>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    version: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, version, overrides || {});
  }
  override attach(address: string): WegaERC20Escrow {
    return super.attach(address) as WegaERC20Escrow;
  }
  override connect(signer: Signer): WegaERC20Escrow__factory {
    return super.connect(signer) as WegaERC20Escrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WegaERC20EscrowInterface {
    return new utils.Interface(_abi) as WegaERC20EscrowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WegaERC20Escrow {
    return new Contract(address, _abi, signerOrProvider) as WegaERC20Escrow;
  }
}
