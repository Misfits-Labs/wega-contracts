/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFeeManagerEvents,
  IFeeManagerEventsInterface,
} from "../../../contracts/events/IFeeManagerEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "feeApplier",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "feeTaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeShare",
        type: "uint256",
      },
    ],
    name: "SetFeeRule",
    type: "event",
  },
] as const;

export class IFeeManagerEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IFeeManagerEventsInterface {
    return new Interface(_abi) as IFeeManagerEventsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IFeeManagerEvents {
    return new Contract(address, _abi, runner) as unknown as IFeeManagerEvents;
  }
}
