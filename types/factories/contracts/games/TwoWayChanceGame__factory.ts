/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TwoWayChanceGame,
  TwoWayChanceGameInterface,
} from "../../../contracts/games/TwoWayChanceGame";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "randomNumbers",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "roll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161051c38038061051c83398101604081905261002f91610130565b600060808190525b81518110156100825761006f81838381518110610056576100566101ed565b6020026020010151600061008960201b9092919060201c565b508061007a81610203565b915050610037565b505061022a565b600061009684848461009e565b949350505050565b60008281526002840160205260408120829055610096848460006100c283836100cb565b90505b92915050565b6000818152600183016020526040812054610112575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556100c5565b5060006100c5565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561014357600080fd5b82516001600160401b038082111561015a57600080fd5b818501915085601f83011261016e57600080fd5b8151818111156101805761018061011a565b8060051b604051601f19603f830116810181811085821117156101a5576101a561011a565b6040529182528482019250838101850191888311156101c357600080fd5b938501935b828510156101e1578451845293850193928501926101c8565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161022357634e487b7160e01b600052601160045260246000fd5b5060010190565b6080516102d86102446000396000604b01526102d86000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063572b6c051461003b578063e62bdf4914610090575b600080fd5b61007b610049366004610219565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b60405190151581526020015b60405180910390f35b6100a361009e366004610234565b6100b1565b604051908152602001610087565b6000806100be84846100e1565b905060006100cc8683610269565b6100d79060016102a1565b9695505050505050565b6000806100ee600061013c565b90506000816100fd42876102a1565b610110906001600160a01b0387166102b4565b61011a90446102a1565b6101249190610269565b9050610131600082610147565b925050505b92915050565b60006101368261015a565b60006101538383610165565b9392505050565b6000610136826101f3565b6000818152600283016020526040812054801515806101a357506101a384846000610153838360008181526001830160205260408120541515610153565b6101535760405162461bcd60e51b815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000604482015260640160405180910390fd5b6000610136825490565b80356001600160a01b038116811461021457600080fd5b919050565b60006020828403121561022b57600080fd5b610153826101fd565b60008060006060848603121561024957600080fd5b8335925060208401359150610260604085016101fd565b90509250925092565b60008261028657634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b808201808211156101365761013661028b565b80820281158282048414176101365761013661028b56fea164736f6c6343000813000a";

type TwoWayChanceGameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TwoWayChanceGameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TwoWayChanceGame__factory extends ContractFactory {
  constructor(...args: TwoWayChanceGameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    randomNumbers: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TwoWayChanceGame> {
    return super.deploy(
      randomNumbers,
      overrides || {}
    ) as Promise<TwoWayChanceGame>;
  }
  override getDeployTransaction(
    randomNumbers: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(randomNumbers, overrides || {});
  }
  override attach(address: string): TwoWayChanceGame {
    return super.attach(address) as TwoWayChanceGame;
  }
  override connect(signer: Signer): TwoWayChanceGame__factory {
    return super.connect(signer) as TwoWayChanceGame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TwoWayChanceGameInterface {
    return new utils.Interface(_abi) as TwoWayChanceGameInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TwoWayChanceGame {
    return new Contract(address, _abi, signerOrProvider) as TwoWayChanceGame;
  }
}
