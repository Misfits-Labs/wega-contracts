/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TwoWayChanceGame,
  TwoWayChanceGameInterface,
} from "../../../contracts/games/TwoWayChanceGame";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "randomNumbers",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "roll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f80fd5b506040516104e93803806104e983398101604081905261002e91610125565b5f60808190525b815181101561007f5761006c81838381518110610054576100546101dd565b60200260200101515f61008660201b9092919060201c565b5080610077816101f1565b915050610035565b5050610215565b5f61009284848461009a565b949350505050565b5f828152600284016020526040812082905561009284845f6100bc83836100c5565b90505b92915050565b5f81815260018301602052604081205461010a57508154600181810184555f8481526020808220909301849055845484825282860190935260409020919091556100bf565b505f6100bf565b634e487b7160e01b5f52604160045260245ffd5b5f6020808385031215610136575f80fd5b82516001600160401b038082111561014c575f80fd5b818501915085601f83011261015f575f80fd5b81518181111561017157610171610111565b8060051b604051601f19603f8301168101818110858211171561019657610196610111565b6040529182528482019250838101850191888311156101b3575f80fd5b938501935b828510156101d1578451845293850193928501926101b8565b98975050505050505050565b634e487b7160e01b5f52603260045260245ffd5b5f6001820161020e57634e487b7160e01b5f52601160045260245ffd5b5060010190565b6080516102bd61022c5f395f604801526102bd5ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c8063572b6c0514610038578063e62bdf491461008d575b5f80fd5b610078610046366004610208565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b60405190151581526020015b60405180910390f35b6100a061009b366004610221565b6100ae565b604051908152602001610084565b5f806100ba84846100dc565b90505f6100c78683610253565b6100d2906001610286565b9695505050505050565b5f806100e75f610133565b90505f816100f54287610286565b610108906001600160a01b038716610299565b6101129044610286565b61011c9190610253565b90506101285f8261013d565b925050505b92915050565b5f61012d8261014f565b5f6101488383610159565b9392505050565b5f61012d826101e4565b5f81815260028301602052604081205480151580610194575061019484845f61014883835f8181526001830160205260408120541515610148565b6101485760405162461bcd60e51b815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000604482015260640160405180910390fd5b5f61012d825490565b80356001600160a01b0381168114610203575f80fd5b919050565b5f60208284031215610218575f80fd5b610148826101ed565b5f805f60608486031215610233575f80fd5b833592506020840135915061024a604085016101ed565b90509250925092565b5f8261026d57634e487b7160e01b5f52601260045260245ffd5b500690565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561012d5761012d610272565b808202811582820484141761012d5761012d61027256fea164736f6c6343000815000a";

type TwoWayChanceGameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TwoWayChanceGameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TwoWayChanceGame__factory extends ContractFactory {
  constructor(...args: TwoWayChanceGameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    randomNumbers: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TwoWayChanceGame> {
    return super.deploy(
      randomNumbers,
      overrides || {}
    ) as Promise<TwoWayChanceGame>;
  }
  override getDeployTransaction(
    randomNumbers: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(randomNumbers, overrides || {});
  }
  override attach(address: string): TwoWayChanceGame {
    return super.attach(address) as TwoWayChanceGame;
  }
  override connect(signer: Signer): TwoWayChanceGame__factory {
    return super.connect(signer) as TwoWayChanceGame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TwoWayChanceGameInterface {
    return new utils.Interface(_abi) as TwoWayChanceGameInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TwoWayChanceGame {
    return new Contract(address, _abi, signerOrProvider) as TwoWayChanceGame;
  }
}
