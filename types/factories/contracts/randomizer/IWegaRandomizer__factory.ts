/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IWegaRandomizer,
  IWegaRandomizerInterface,
} from "../../../contracts/randomizer/IWegaRandomizer";

const _abi = [
  {
    inputs: [],
    name: "randomNumbersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "retrieve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "randomNumbers",
        type: "uint256[]",
      },
    ],
    name: "seed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "useOwnerNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IWegaRandomizer__factory {
  static readonly abi = _abi;
  static createInterface(): IWegaRandomizerInterface {
    return new Interface(_abi) as IWegaRandomizerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IWegaRandomizer {
    return new Contract(address, _abi, runner) as unknown as IWegaRandomizer;
  }
}
